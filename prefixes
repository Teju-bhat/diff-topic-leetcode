
https://leetcode.com/problems/longest-common-prefix/

Write a function to find the longest common prefix string amongst an array of strings.

If there is no common prefix, return an empty string "".
_________________________________________________________________
Example 1:

Input: strs = ["flower","flow","flight"]
Output: "fl"
Example 2:

Input: strs = ["dog","racecar","car"]
Output: ""
Explanation: There is no common prefix among the input strings.
 _________________________________________________________________
 class Solution {
    public String longestCommonPrefix(String[] strs) {
        String prefix=strs[0];
       for(int i=1;i<strs.length;i++){
            while(strs[i].indexOf(prefix)!=0){
                     prefix=prefix.substring(0,prefix.length()-1);    
            }   
           
     }  return prefix;  
    }
    
}
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
PIVOT INDEX
https://leetcode.com/explore/learn/card/array-and-string/201/introduction-to-array/1144/

Input: nums = [1,7,3,6,5,6]
Output: 3
Explanation:
The pivot index is 3.
Left sum = nums[0] + nums[1] + nums[2] = 1 + 7 + 3 = 11
Right sum = nums[4] + nums[5] = 5 + 6 = 11

Input: nums = [1,2,3]
Output: -1

Input: nums = [2,1,-1]
Output: 0
__________________________________________________________________________________
Example 2:class Solution {
    public int pivotIndex(int[] nums) {
        int total=0;
        int left_sum=0;
        for(int i=0;i<nums.length;i++){
            total=total+nums[i];
        }
        for(int i=0;i<nums.length;i++){
               if(i!=0){
                   left_sum=left_sum+nums[i-1];
                 }
               if(total-left_sum-nums[i]==left_sum)
            {
                  return i;
                
            }
            
        }
        return -1;
    }
}


nput : arr[ ] = {5, 3, 1, 6, 9}
Output : 1
Explanation:
Initially: 5 3 1 6 9
In first step: 5 3 1 6
In Second step: 5 3 1
In Third step: 3 1
In Fourth step: 1
Return 1


Example 2:

Input : arr[ ] = {5, 9, 2, 6} 
Output :  2
++++++++++++++++++++++++++++++++++++++++++++++++++++
class Complete{
    
   
    // Function for finding maximum and value pair
    public static int chocolates (int arr[], int n) {
      int low=0;
      int high=arr.length-1;
      while(low<high){
          if(arr[low]>arr[high]){
              low++;
          }
          else{
              high--;
          }
      }
      return arr[low];

    } 
}
____________________________________________________________-
Flipping an Image
For example, flipping [1,1,0] horizontally results in [0,1,1].
To invert an image means that each 0 is replaced by 1, and each 1 is replaced by 0.

For example, inverting [0,1,1] results in [1,0,0].

Input: image = [[1,1,0,0],[1,0,0,1],[0,1,1,1],[1,0,1,0]]
Output: [[1,1,0,0],[0,1,1,0],[0,0,0,1],[1,0,1,0]]
Explanation: First reverse each row: [[0,0,1,1],[1,0,0,1],[1,1,1,0],[0,1,0,1]].
Then invert the image: [[1,1,0,0],[0,1-1,0],[0,0,0,1],[1,0,1,0]]
++++++++++++++++++++++++++++++++++++++++++++++
class Solution {
    public int[][] flipAndInvertImage(int[][] image) {
          
        for(int i=0;i<image.length;i++){
              int low=0;
        int high=image[i].length-1;
             while(low<=high){
             if(image[i][low]==image[i][high]){
                  image[i][low]=1-image[i][low];
                 image[i][high]=image[i][low];
             }
             low++;
             high--;  
         }
        }
        return image;
    }
}_____________________________________________________



